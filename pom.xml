<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

<!--    <groupId>customize!project.group</groupId> -->
    <groupId>au.com.foxsports</groupId> <!-- Please do not edit this line! Managed by customize.sh -->
<!--    <artifactId>customize!project.artifact</artifactId> -->
    <artifactId>bedrock-streamotion-webflux-k8s</artifactId> <!-- Please do not edit this line! Managed by customize.sh -->
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

<!--    <name>customize!project.name</name> -->
    <name>bedrock-streamotion-webflux-k8s</name> <!-- Please do not edit this line! Managed by customize.sh -->
<!--    <description>customize!project.description</description> -->
    <description>Skeleton Springboot webflux project, used as a base for all new Spring Boot projects for Streamotion using webflux</description> <!-- Please do not edit this line! Managed by customize.sh -->

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.4.RELEASE</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Test Properties -->
        <test.skip.unit>false</test.skip.unit>
        <test.skip.component>true</test.skip.component>
        <test.targetUrl>http://localhost:8080</test.targetUrl>
        <!-- // Test Properties -->

        <java.version>1.8</java.version>
        <spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
        <assertj.version>3.11.1</assertj.version>
        <junit-jupiter.version>5.4.1</junit-jupiter.version>
        <wiremock.version>2.22.0</wiremock.version>
        <logstash-logback-encoder.version>5.3</logstash-logback-encoder.version>
        <webjars-bootstrap.version>4.3.1</webjars-bootstrap.version>
        <webjars-locator.version>0.36</webjars-locator.version>
        <webjars-swagger-ui.version>3.22.1</webjars-swagger-ui.version>
        <problem-version>0.24.0</problem-version>
        <testcontainers.version>1.11.1</testcontainers.version>
        <spock.version>1.2-groovy-2.4</spock.version>
        <okhttp.version>4.1.0</okhttp.version>
        <brave.version>5.6.3</brave.version>
        <retrofit2.version>2.6.1</retrofit2.version>
    </properties>

    <distributionManagement>
        <repository>
            <id>central</id>
            <url>${internal.url}</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <url>${snapshot.url}</url>
        </snapshotRepository>
    </distributionManagement>

    <scm>
<!--        <connection>scm:git:customize!project.location.git</connection> -->
        <connection>scm:git:https://github.com/fsa-streamotion/bedrock-streamotion-webflux-k8s.git</connection> <!-- Please do not edit this line! Managed by customize.sh -->
<!--        <developerConnection>scm:git:customize!project.location.git</developerConnection> -->
        <developerConnection>scm:git:https://github.com/fsa-streamotion/bedrock-streamotion-webflux-k8s.git</developerConnection> <!-- Please do not edit this line! Managed by customize.sh -->
<!--        <url>customize!project.location</url> -->
        <url>https://github.com/fsa-streamotion/bedrock-streamotion-webflux-k8s</url> <!-- Please do not edit this line! Managed by customize.sh -->
        <tag>HEAD</tag>
    </scm>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-aws-secrets-manager-config</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.amazonaws</groupId>
                    <artifactId>aws-java-sdk-cloudformation</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mustache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-jose</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-resource-server</artifactId>
        </dependency>

        <!-- Metrics -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>

        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-new-relic</artifactId>
        </dependency>

        <dependency>
            <!--
            Web error handling dependencies using Problem (RFC7807)
            More info here: https://tools.ietf.org/html/rfc7807
            -->
            <groupId>org.zalando</groupId>
            <artifactId>problem-spring-webflux</artifactId>
            <version>${problem-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-afterburner</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- Javascript support (via WebJars) -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${webjars-bootstrap.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>swagger-ui</artifactId>
            <version>${webjars-swagger-ui.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator</artifactId>
            <version>${webjars-locator.version}</version>
        </dependency>

        <!-- Development Tools -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Logging and tracing dependencies -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback-encoder.version}</version>
        </dependency>

        <!-- Retrofit -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp.version}</version>
        </dependency>
        <dependency>
            <groupId>io.zipkin.brave</groupId>
            <artifactId>brave-instrumentation-okhttp3</artifactId>
            <version>${brave.version}</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>retrofit</artifactId>
            <version>${retrofit2.version}</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>converter-jackson</artifactId>
            <version>${retrofit2.version}</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>converter-scalars</artifactId>
            <version>${retrofit2.version}</version>
        </dependency>

        <!-- Testing dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Additional JUnit assertions -->
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Useful for integration testing when an external web server is required. -->
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>${wiremock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!--
            Use this library to run external dependencies (e.g. databases) inside a container. It will use random ports
            and will destroy the containers after the tests are completed. Note that it will not remove the downloaded images.
            More info here: https://www.testcontainers.org/
            -->
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Spock Dependencies -->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>${spock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-spring</artifactId>
            <version>${spock.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- // Spock Dependencies -->

        <!-- API Doc Validation -->
        <dependency>
            <groupId>com.atlassian.oai</groupId>
            <artifactId>swagger-request-validator-wiremock</artifactId>
            <version>2.5.0</version>
            <scope>test</scope>
        </dependency>
        <!-- // API Doc Validation -->

        <!-- PLEASE ADD ANY OTHER DEPENDENCIES BELOW THIS LINE -->

    </dependencies>

    <dependencyManagement>
        <!-- Only BOM dependencies should go here -->
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- PLEASE ADD ANY OTHER DEPENDENCIES BELOW THIS LINE -->

        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-build-info</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>repackage</id>
                        <phase>package</phase>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <executable>true</executable>
                            <classifier>exec</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>ch.acanda.maven</groupId>
                <artifactId>spring-banner-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <id>generate-banner</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                </executions>
                <configuration>
                    <info>
                        <![CDATA[Version         : ${application.version}
Git Commit ID   : ${git.commit.id.abbrev}
Author          : ${git.build.user.name}
Timestamp       : ${git.commit.time}]]>
                    </info>
                    <color>yellow</color>
                </configuration>
            </plugin>
            <plugin>
                <!-- Kept here for backwards-compatibility; won't be needed once we start doing "GitOps" -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                    <preparationGoals>clean install</preparationGoals>
                    <pushChanges>false</pushChanges>
                    <localCheckout>true</localCheckout>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.0</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.29</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <encoding>UTF-8</encoding>
                    <outputEncoding>UTF-8</outputEncoding>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <linkXRef>false</linkXRef>
                </configuration>
                <executions>
                    <execution>
                        <id>verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>3.1.12</version>
                <dependencies>
                    <dependency>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs</artifactId>
                        <version>4.0.0-beta3</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <outputEncoding>UTF-8</outputEncoding>
                    <includeTests>false</includeTests>
                </configuration>
                <executions>
                    <execution>
                        <id>verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*Spec.java</include>
                        <include>**/*Tests.java</include>
                    </includes>
                    <skipTests>${test.skip.unit}</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>1.6</version>
                <executions>
                    <execution>
                        <id>compile-groovy-tests</id>
                        <goals>
                            <goal>addTestSources</goal>
                            <goal>compileTests</goal>
                        </goals>
                        <configuration>
                            <testSources>
                                <testSource>
                                    <directory>src/test/groovy</directory>
                                    <includes>
                                        <include>**/*.groovy</include>
                                    </includes>
                                </testSource>
                            </testSources>
                            <skipTests>${test.skip.unit}</skipTests>
                        </configuration>
                    </execution>
                    <execution>
                        <id>compile-groovy-component-tests</id>
                        <goals>
                            <goal>addTestSources</goal>
                            <goal>compileTests</goal>
                        </goals>
                        <configuration>
                            <testSources>
                                <testSource>
                                    <directory>src/test/groovy</directory>
                                    <excludes>
                                        <exclude>**/*Spec.groovy</exclude>
                                    </excludes>
                                </testSource>
                                <testSource>
                                    <directory>src/component-test/groovy</directory>
                                    <includes>
                                        <include>**/*.groovy</include>
                                    </includes>
                                </testSource>
                            </testSources>
                            <skipTests>${test.skip.component}</skipTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-component-test-resources</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/component-test/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>component-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>**/*Spec.java</include>
                    </includes>
                    <skipTests>${test.skip.component}</skipTests>
                    <systemProperties>
                        <property>
                            <name>targetUrl</name>
                            <value>${test.targetUrl}</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>

            <!-- PLEASE ADD ANY OTHER PLUGINS BELOW THIS LINE -->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>1.5.0</version>
                <configuration>
                    <from>
                        <image>053457794187.dkr.ecr.ap-southeast-2.amazonaws.com/fsa-streamotion/streamotion-java:corretto-0.0.3</image>
                    </from>
                    <container>
                        <jvmFlags>
                            <jvmFlag>-javaagent:/newrelic/newrelic.jar</jvmFlag>
                            <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
                            <jvmFlag>-Dfile.encoding=UTF-8</jvmFlag>
                        </jvmFlags>
                    </container>
                </configuration>
            </plugin>
        </plugins>

    </build>

</project>
